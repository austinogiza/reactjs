{"version":3,"sources":["images/logo.svg","images/logo-figma.svg","images/logo-invision.svg","images/logo-react.svg","images/logo-sketch.svg","images/logo-xcode.svg","images/logo-framer.svg","components/Nav.js","components/Logos.js","components/Hero.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","src","logo","alt","href","Component","Logos","figma","invision","react","sketch","xcode","framer","Hero","width","height","viewBox","fill","xmlns","repeatCount","attributeName","dur","values","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,2MCwC5BC,E,uKAnCX,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKC,IAAKC,IAAMC,IAAI,MAGtB,yBAAKH,UAAU,aACb,4BACE,4BACE,uBAAGI,KAAK,KAAR,YAEF,4BACE,uBAAGA,KAAK,KAAR,cAEF,4BACE,uBAAGA,KAAK,KAAR,cAEF,4BACE,uBAAGA,KAAK,KAAR,cAKN,yBAAKJ,UAAU,cACb,uBAAGI,KAAK,IAAIJ,UAAU,eAAtB,uB,GA3BMK,a,oGCoBHC,E,uKAbX,OACE,yBAAKN,UAAU,SACb,yBAAKC,IAAKM,IAAOJ,IAAI,KACrB,yBAAKF,IAAKO,IAAUL,IAAI,KACxB,yBAAKF,IAAKQ,IAAON,IAAI,KACrB,yBAAKF,IAAKS,IAAQP,IAAI,KACtB,yBAAKF,IAAKU,IAAOR,IAAI,KACrB,yBAAKF,IAAKW,IAAQT,IAAI,U,GATVE,aCyCLQ,E,uKA3CX,OACE,yBAAKb,UAAU,QACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,uDAEE,0BAAMA,UAAU,QAAhB,iBAEF,uIAIA,uBAAGA,UAAU,gBAAgBI,KAAK,KAAlC,mBAGA,kBAAC,EAAD,OAGF,yBACEU,MAAM,OACNC,OAAO,KACPC,QAAQ,cACRC,KAAK,OACLC,MAAM,8BAEN,0BAAMD,KAAK,SACT,6BACEE,YAAY,aACZF,KAAK,SACLG,cAAc,IACdC,IAAI,MACJC,OAAO,8c,GAjCFjB,aCIJkB,MAJf,WACE,OAAO,kBAAC,EAAD,OCOWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9eae45ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9202cd02.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-figma.f9233770.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-invision.8b285cc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-react.d60d8202.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-sketch.5ce493ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-xcode.b957b2d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-framer.29a42449.svg\";","import React, { Component } from \"react\";\r\nimport logo from \"../images/logo.svg\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Nav\">\r\n        <div className=\"container\">\r\n          <div className=\"logo\">\r\n            <img src={logo} alt=\"\" />\r\n          </div>\r\n\r\n          <div className=\"nav_links\">\r\n            <ul>\r\n              <li>\r\n                <a href=\"#\">Courses</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">Downloads</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">Workshops</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">Sign In</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"nav_button\">\r\n            <a href=\"#\" className=\"btn btn_try\">\r\n              Try for free\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport figma from \"../images/logo-figma.svg\";\r\nimport invision from \"../images/logo-invision.svg\";\r\nimport react from \"../images/logo-react.svg\";\r\nimport sketch from \"../images/logo-sketch.svg\";\r\nimport xcode from \"../images/logo-xcode.svg\";\r\nimport framer from \"../images/logo-framer.svg\";\r\n\r\nclass Logos extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"logos\">\r\n        <img src={figma} alt=\"\" />\r\n        <img src={invision} alt=\"\" />\r\n        <img src={react} alt=\"\" />\r\n        <img src={sketch} alt=\"\" />\r\n        <img src={xcode} alt=\"\" />\r\n        <img src={framer} alt=\"\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logos;\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"./Nav\";\r\n\r\nimport Logos from \"./Logos\";\r\nclass Hero extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Hero\">\r\n        <Nav />\r\n        <div className=\"container\">\r\n          <h1>\r\n            Learn to design and code\r\n            <span className=\"blue\"> modern apps</span>\r\n          </h1>\r\n          <p>\r\n            Complete courses about the best tools and design systems. Prototype\r\n            and build apps with React and Swift.\r\n          </p>\r\n          <a className=\"btn btn_watch\" href=\"#\">\r\n            Watch the video\r\n          </a>\r\n          <Logos />\r\n        </div>\r\n\r\n        <svg\r\n          width=\"100%\"\r\n          height=\"90\"\r\n          viewBox=\"0 0 100% 90\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path fill=\"white\">\r\n            <animate\r\n              repeatCount=\"indefinite\"\r\n              fill=\"freeze\"\r\n              attributeName=\"d\"\r\n              dur=\"10s\"\r\n              values=\"M0 25.9086C277 84.5821 433 65.736 720 25.9086C934.818 -3.9019 1214.06 -5.23669 1442 8.06597C2079 45.2421 2208 63.5007 2560 25.9088V171.91L0 171.91V25.9086Z;\r\n              M0 87.1596C316 87.1597 444 160 884 52.0001C1324 -55.9999 1320.29 34.966 1538 71.251C1814 117.251 2156 189.252 2560 87.1597V233.161L0 233.161V87.1596Z;\r\n              M0 53.6584C158 11.0001 213 0 363 0C513 0 855.555 115.001 1154 115.001C1440 115.001 1626 -38.0004 2560 53.6585V199.66L0 199.66V53.6584Z;\r\n              \"\r\n            />\r\n          </path>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hero;\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Hero from \"./components/Hero\";\nfunction App() {\n  return <Hero />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}